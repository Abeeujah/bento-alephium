[package]
description = "Bento Core"
name = "bento-core"
version = "0.1.0"

authors = { workspace = true }
edition = { workspace = true }
license = { workspace = true }

[dependencies]
bento-trait = { path = "../../crates/bento-trait" }
bento-types = { path = "../../crates/bento-types" }
actix-web.workspace = true
allocative.workspace = true
allocative_derive.workspace = true
anyhow.workspace = true
async-trait.workspace = true
axum.workspace = true
backoff.workspace = true
base64.workspace = true
bigdecimal.workspace = true
chrono.workspace = true
clap.workspace = true
diesel-async.workspace = true
diesel-enum.workspace = true
diesel.workspace = true
diesel_async_migrations.workspace = true
diesel_migrations.workspace = true
dotenv.workspace = true
dotenvy.workspace = true
env_logger.workspace = true
futures-util.workspace = true
futures.workspace = true
log.workspace = true
native-tls.workspace = true
postgres-native-tls.workspace = true
rand.workspace = true
regex.workspace = true
reqwest-middleware.workspace = true
reqwest-retry.workspace = true
reqwest.workspace = true
serde.workspace = true
serde_json.workspace = true
thiserror.workspace = true
tokio-postgres.workspace = true
tokio-tungstenite.workspace = true
tokio.workspace = true
toml.workspace = true
tracing-subscriber.workspace = true
tracing.workspace = true
url.workspace = true
utoipa-axum.workspace = true
utoipa-swagger-ui.workspace = true
utoipa.workspace = true
uuid.workspace = true
mockall.workspace = true

[features]
libpq = ["diesel/postgres"]
# When using the default features we enable the diesel/postgres feature. We configure
# it in a feature so the CLI can opt out, since it cannot tolerate the libpq dep.
# Recall that features should always be additive.
default = ["libpq"]

[dev-dependencies]
rstest.workspace = true
tempfile.workspace = true
